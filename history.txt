*******************************************************************************
*** History of Mesh2HRTF
*** Contributors:
***     Piotr Majdak, ARI
***		Wolfgang Kreuzer, ARI
***		Harald Ziegelwanger, ARI
*** 	Michael Kalcher, ARI
***     Fabian Brinkmann, AC-TUB
***		Robert Pelzer, AC-TUB
***		Junaid Khan, FH Technikum Wien
***     Oliver Weissbarth, CG-TUB
***     Slim Ghorbal, IETR/CentraleSupÃ©lec, Mimi
*** Institutions
***		ARI: Austrian Research Institute, Austian Academy of Sciences, Vienna
***     AC-TUB: Audio Communication Group, Technical University of Berlin
***     CG-TUB: Computer Graphics Group, Technical University of Berlin
***     FH Technikum Wien: University of Applied Sciences, Technikum Wien
***     Mimi: Mimi Hearing Technologies, Berlin, Germany
*******************************************************************************

*** DEVELOPMENT STATUS ***

*** v0.5.0 alpha (Fabian Brinkmann, Wolfgang Kreuzer)
- bumped all python sckripts to Blender >= 2.80.0
- changed layout of the export GUI to be more clear and less prone to user input errors
	- added handling of frequency dependent boundary conditions
	- The source type is now defined by a single drop down menue
	- The point source coordinates are obtained from a user placed object in the scene
	- Referencing the HRTF spectra to the center of the head now also supported for point sources
	- Referencing can now be selected in the GUI
	- Enabeled the computation of HRIRs from complete, single sided, equidistant HRTF spectra from the GUI
	- More flexible selection of the frequneucies that are simulated
	- Evaluation grids are now specified by strings. This allows to use evaluation grids outside the Mesh2HRTF path
- Improved structure of the output data created by Output2HRTF
	- Data is now stored in a separate folder
	- Data is named according to the evaluation girds, object meshes
	- Data for multiple evaluation grids is now stored in separate files
	- Frequncies in SOFA files now contain decimal values
- Removed incomplete, buggy, and undocumented features
	- removed the handling frequency dependent meshes in exportMesh2HRTF.py. Skripting in Blender can do the job and is more flexible
	- removed near field calculation. This generated a hard coded extremal sampling grid of spherical harmonics order 46 but was not documented
	- a separate core was assigned to the simulation of low frequencies. This was not documented and buggy in certain cases
- General
	- soft pep8 styling of Python code
	- modularization of Python code as a preparation to introduce unit tests

*** v0.4.0 (Fabian Brinkmann)
- this will be the last release supporting Blender < 3.8
- new directory structure

*** v0.3.2 (Fabian Brinkmann)
- big fix and improvements in PreProcessing/MeshGrading (ticket #25, commit r38)
- bug fix in ExportMesh2HRTF.py (Tickets #13, #15, and #23 on sourcefourge)
- fixed a bug Output2HRTF_Main.m. Now the low frequency HRTF should at 0 dB if using reciprocal simulation and if setting reference = true in Output2HRTF.m, which is auto-generated when exporting from blender.

*** v0.3.1 (Wolfgang Kreuzer)
- bug fix in NumCalc

*** v0.3.0 (28.05.2019, Junaid Khan)
- New directory structure
- Pascal-case naming of the files
- Small bugfixes in the scripts

*** v0.2.0 (Fabian Brinkmann, Robert Pelzer, Piotr Majdak)
- Mesh2Input:
  - MaterialAssignment.py: A Python script that can be loaded into Blender to center the head mesh in the coordinate system
  - MeshCentering.py: A Python script that can be loaded into Blender to automatically assign the materials 'Skin', 'Left ear', and 'Right ear'
  - export_mesh2hrtf.py: Bug fix to correctly export data for calculating the left ear, right ear and both ears.
  - EvaluationGrids (Matlab):
    - Arbitrary user defined spatial grids can now be generated (see the code in demo.m)
	- 'User' in 'Mesh2Input/Data/Evaluation Grids' renamed to 'Custom' because 'User' is a reserved variable in Blender/Python
    - Evaluation grids can be plotted with the Matlab code
- NumCalc: MS VS Solution added to compile NumCalc on Windows.
- Output2HRTF:
  - Output2HRTF_Main.m: Added optional referencing of HRTFs if calculated reciprocally to achieve that the low frequency magnitude of the HRTFs is 0 dB. This is done by dividing the complex pressure by the area of the ear elements (radiating element), compensating for the velocity of the radiating element, and by a division of the complex pressure with the pressure of a point source in the origin of coordinates. (export_mesh2hrtf.py writes the area of the radiating elements, and the flag for referencing to Output2HRTF.m)
  - Output2HRTF_Main.m: Big fix to correctly export SOFA files with data for the left ear, right ear, and both ears.
- Mesh-grading tool moved to Mesh2Input

*** v0.1.3 (1.6.2018, Wolfgang Kreuzer, Harald Ziegelwanger, Piotr Majdak)
- mesh-grading plugin for Open Flipper added
- Output: various bug fixes
- Output: Paraview scripts added
- NumCalc: Dissolve tiny clusters and add their elements to next bigger cluster. This seems to enhance the stability of the MLFMM.

*** v1.0.2 (18.6.2016, Harald Ziegelwanger)
initial commit