*************************************************************
*** History of Mesh2HRTF
*** Acoustics Research Institute, Austrian Academy of Sciences, Vienna
*** Project leader: Piotr Majdak, piotr@majdak.com
*** Contributors:
***		Wolfgang Kreuzer, ARI
***		Harald Ziegelwanger, ARI
*** 	Michael Kalcher, ARI
***     Fabian Brinkmann, TU-Berlin
***		Robert Pelzer, TU-Berlin
*************************************************************

*** DEVELOPMENT STATUS ***

*** v0.2.0 (Fabian Brinkmann, Robert Pelzer, Piotr Majdak)
- Mesh2Input: 
  - MaterialAssignment.py: A Python script that can be loaded into Blender to center the head mesh in the coordinate system
  - MeshCentering.py: A Python script that can be loaded into Blender to automatically assign the materials 'Skin', 'Left ear', and 'Right ear' 
  - export_mesh2hrtf.py: Bug fix to correctly export data for calculating the left ear, right ear and both ears.
  - EvaluationGrids (Matlab): 
    - Arbitrary user defined spatial grids can now be generated (see the code in demo.m)
	- 'User' in 'Mesh2Input/Data/Evaluation Grids' renamed to 'Custom' because 'User' is a reserved variable in Blender/Python
    - Evaluation grids can be plotted with the Matlab code
- NumCalc: MS VS Solution added to compile NumCalc on Windows.
- Output2HRTF:
  - Output2HRTF_Main.m: Added optional referencing of HRTFs if calculated reciprocally to achieve that the low frequency magnitude of the HRTFs is 0 dB. This is done by dividing the complex pressure by the area of the ear elements (radiating element), compensating for the velocity of the radiating element, and by a division of the complex pressure with the pressure of a point source in the origin of coordinates. (export_mesh2hrtf.py writes the area of the radiating elements, and the flag for referencing to Output2HRTF.m)
  - Output2HRTF_Main.m: Big fix to correctly export SOFA files with data for the left ear, right ear, and both ears.
- Mesh-grading tool moved to Mesh2Input
  
*** v0.1.3 (1.6.2018, Wolfgang Kreuzer, Harald Ziegelwanger, Piotr Majdak)
- mesh-grading plugin for Open Flipper added
- Output: various bug fixes
- Output: Paraview scripts added 
- NumCalc: Dissolve tiny clusters and add their elements to next bigger cluster. This seems to enhance the stability of the MLFMM.

*** v1.0.2 (18.6.2016, Harald Ziegelwanger)
initial commit